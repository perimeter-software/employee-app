name: Dev | Deploy Employee App to AWS Elastic Beanstalk

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Which environment?"
        required: true
        default: develop

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    environment: ${{ github.event.inputs.environment }}

    env:
      AWS_REGION: ${{ vars.AWS_REGION }}
      EB_APP_NAME: employee-app
      EB_ENV_NAME: employee-app-dev
      S3_BUCKET: psc-beanstalk-apps
      S3_KEY_PREFIX: employee-app/dev

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::852313829394:role/github-cicd
          aws-region: ${{ env.AWS_REGION }}

      - name: Install dependencies and build
        run: |
          npm ci
          npm run build

      - name: Zip for Beanstalk
        run: |
          zip -r app.zip .next public package.json next.config.js \
            -x "node_modules/*" ".git/*"

      - name: Upload ZIP to S3
        run: |
          aws s3 cp app.zip s3://$S3_BUCKET/$S3_KEY_PREFIX/app-${{ github.run_id }}.zip

      - name: Create EB App Version
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name $EB_APP_NAME \
            --version-label v-${{ github.run_id }} \
            --source-bundle S3Bucket=$S3_BUCKET,S3Key=$S3_KEY_PREFIX/app-${{ github.run_id }}.zip

      - name: Deploy to EB with all env vars and secrets
        run: |
          aws elasticbeanstalk update-environment \
            --environment-name $EB_ENV_NAME \
            --version-label v-${{ github.run_id }} \
            --option-settings \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=APP_BASE_URL,Value=${{ vars.APP_BASE_URL }} \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=AUTH0_AUDIENCE,Value=${{ vars.AUTH0_AUDIENCE }} \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=AUTH0_CLIENT_ID,Value=${{ vars.AUTH0_CLIENT_ID }} \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=AUTH0_DOMAIN,Value=${{ vars.AUTH0_DOMAIN }} \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=MONGODB_CONNECTION_STRING,Value=${{ vars.MONGODB_CONNECTION_STRING }} \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=NEXT_PUBLIC_API_URL,Value=${{ vars.NEXT_PUBLIC_API_URL }} \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=REDIS_HOST,Value=${{ vars.REDIS_HOST }} \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=REDIS_PORT,Value=${{ vars.REDIS_PORT }} \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=REDIS_URL,Value=${{ vars.REDIS_URL }} \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=SECRET_AUTH0_AUDIENCE,Value=${{ vars.SECRET_AUTH0_AUDIENCE }} \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=SECRET_AUTH0_CLIENT_ID,Value=${{ vars.SECRET_AUTH0_CLIENT_ID }} \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=SECRET_AUTH0_DOMAIN,Value=${{ vars.SECRET_AUTH0_DOMAIN }} \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=ANTHROPIC_API_KEY,Value=${{ secrets.ANTHROPIC_API_KEY }} \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=AUTH0_CLIENT_SECRET,Value=${{ secrets.AUTH0_CLIENT_SECRET }} \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=AUTH0_SECRET,Value=${{ secrets.AUTH0_SECRET }} \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=NEXT_PUBLIC_GOOGLE_MAPS_API_KEY,Value=${{ secrets.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY }} \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=OPENAI_API_KEY,Value=${{ secrets.OPENAI_API_KEY }} \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=SECRET_AUTH0_CLIENT_SECRET,Value=${{ secrets.SECRET_AUTH0_CLIENT_SECRET }} \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=SECRET_AUTH0_SERVER_SECRET,Value=${{ secrets.SECRET_AUTH0_SERVER_SECRET }}
